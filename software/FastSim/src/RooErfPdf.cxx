/***************************************************************************** 
 * Project: RooFit                                                           * 
 *                                                                           * 
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/ 

// Your description goes here... 

#include "Riostream.h" 

#include "RooErfPdf.h" 
#include "RooAbsReal.h" 
#include "RooAbsCategory.h" 
#include <math.h> 
#include "TMath.h" 

ClassImp(RooErfPdf) 

 RooErfPdf::RooErfPdf(const char *name, const char *title, 
                        RooAbsReal& _m,
                        RooAbsReal& _par1,
                        RooAbsReal& _par2,
                        RooAbsReal& _par3,
                        RooAbsReal& _par4) :
   RooAbsPdf(name,title), 
   m("m","m",this,_m),
   par1("par1","par1",this,_par1),
   par2("par2","par2",this,_par2),
   par3("par3","par3",this,_par3),
   par4("par4","par4",this,_par4)
 { 
 } 


 RooErfPdf::RooErfPdf(const RooErfPdf& other, const char* name) :  
   RooAbsPdf(other,name), 
   m("m",this,other.m),
   par1("par1",this,other.par1),
   par2("par2",this,other.par2),
   par3("par3",this,other.par3),
   par4("par4",this,other.par4)
 { 
 } 



 Double_t RooErfPdf::evaluate() const 
 { 
   // ENTER EXPRESSION IN TERMS OF VARIABLE ARGUMENTS HERE 
  double h1 = (m-par1)/par2/sqrt(2);
  double h2 = (m-par3)/par4/sqrt(2);
  return (TMath::Max(TMath::Erf(h1)+TMath::Erfc(h2)-2,0.));
 } 



